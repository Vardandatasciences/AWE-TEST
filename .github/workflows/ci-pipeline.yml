name: Backend CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Step 3: Install backend dependencies
    - name: Install Backend Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt  # Install dependencies from backend/requirements.txt

    # Step 4: Lint with flake8 (Python)
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 backend || true  # Lint Python code in the 'backend' directory, ignore failures to continue the pipeline

    # Step 5: Run Unit Tests (Python)
    - name: Run Python Unit Tests
      run: |
        pip install pytest  # Install pytest
        pytest backend  # Run unit tests for the backend code in the backend directory

    # Step 6: Run Snyk Dependency Scan (Python)
    - name: Run Snyk Dependency Scan (Backend)
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --file=backend/requirements.txt  # Scan backend dependencies in requirements.txt

    # Step 7: Run Snyk Code Scan (Static Analysis)
    - name: Run Snyk Code Scan (Static Analysis)
      run: snyk code test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Snyk token for authentication
